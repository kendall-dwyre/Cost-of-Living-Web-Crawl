# -*- coding: utf-8 -*-
"""Cost_Of_Living.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1amlq6kJLpF7aL7u7jB4ZX13X7QL_963A

Objective:

1.) Locate an appropriate data file online (some table) that has cost of living information.  

2.) Create code to capture that table.

##https://www.numbeo.com/cost-of-living/rankings_by_country.jsp
"""

import requests
from bs4 import BeautifulSoup
import pandas as pd

# Step 1: Fetch the webpage content
url = "https://www.numbeo.com/cost-of-living/rankings_by_country.jsp"
response = requests.get(url)
if response.status_code != 200:
    raise Exception(f"Failed to load page {url}")

# Step 2: Parse the HTML content with BeautifulSoup
soup = BeautifulSoup(response.content, 'html.parser')

# Step 3: Locate the table in the HTML by id
table = soup.find('table', {'id': 't2'})

# Check if the table was found
if table is None:
    raise Exception("Table with id 't2' was not found.")

# Step 4: Extract the table headers
headers = []
for th in table.find_all('th'):
    headers.append(th.text.strip())

# Step 5: Extract the table rows
rows = []
for tr in table.find_all('tr')[1:]:  # skip the header row
    cells = tr.find_all('td')
    row = [cell.text.strip() for cell in cells]
    rows.append(row)

# Step 6: Create a DataFrame to store the data
df = pd.DataFrame(rows, columns=headers)

# Step 7: Convert relevant columns to float for calculations
df['Cost of Living Index'] = df['Cost of Living Index'].astype(float)

# Step 8: Get the US Cost of Living Index
us_cost_of_living_index = df.loc[df['Country'] == 'United States', 'Cost of Living Index'].values[0]

# Step 9: Calculate the Weighted Cost of Living Index Rounded to 2 decimals
df['Weighted Cost of Living Index'] = round(df['Cost of Living Index'] / us_cost_of_living_index * 100, 2)

# Step 10: Display the modified DataFrame or save it to a CSV file
print(df[['Country', 'Cost of Living Index', 'Weighted Cost of Living Index']])
df.to_csv('weighted_cost_of_living_rankings.csv', index=False)